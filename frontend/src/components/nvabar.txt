/* General styling for the navbar */
.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  background-color: #333;
  color: white;
  flex-wrap: wrap;
}

/* Left side of the navbar containing the brand and nav items */
.navbar-left {
  display: flex;
  align-items: center;
  padding-left: 20px;
}

/* Company name styling */
.company-name {
  margin-right: 20px;
  font-weight: bold;
  font-size: 18px;
}

/* Nav items styling */
.nav-item {
  position: relative;
  padding: 8px 12px;
  cursor: pointer;
  color: #f8f9fa; /* Light color for better readability on dark background */
  transition: color 0.3s ease;
}

.nav-item:hover {
  color: #007bff; /* Change color on hover for better interactivity */
}

/* Modern underline effect for the active page */
.nav-item.active {
  color: #007bff; /* Bright blue color for active text */
  font-weight: bold; /* Make the active text bold for emphasis */
}

.nav-item.active::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -4px; /* Position the underline slightly below the text */
  width: 95%;
  height: 2px;
  background-color: #007bff; /* Blue color for the underline */
  border-radius: 2px; /* Smooth edges for the underline */
  transform: scaleX(1);
  transform-origin: bottom right;
  transition: transform 0.3s ease-out;
}

.nav-item:not(.active)::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -4px;
  width: 95%;
  height: 2px;
  background-color: #007bff;
  transform: scaleX(0);
  transform-origin: bottom left;
  transition: transform 0.3s ease-out;
}

.nav-item:hover::after {
  transform: scaleX(1);
  transform-origin: bottom left;
}

/* Right side of the navbar for login/logout buttons */
.navbar-right {
  padding-right: 20px;
}

.login-button,
.logout-button {
  padding: 8px 16px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.login-button:hover {
  background-color: #0056b3;
}

.logout-button {
  background-color: #dc3545;
}

.logout-button:hover {
  background-color: #a71d2a;
}

/* Hide the toggle button on larger screens */
.menu-toggle {
  display: none;
  background: none;
  border: none;
  color: white;
  font-size: 24px;
  cursor: pointer;
}

/* Responsive styles for tablets and smaller devices */
@media screen and (max-width: 768px) {
  .menu-toggle {
    display: block; /* Show toggle button on smaller screens */
  }

  .nav-items {
    display: none; /* Hide nav items by default on small screens */
    flex-direction: column; /* Stack vertically when open */
    position: absolute;
    top: 60px;
    left: 0;
    width: 100%;
    background-color: #333;
    padding: 10px;
  }

  .nav-items.open {
    display: flex; /* Show nav items when menu is open */
  }

  .nav-item {
    padding: 10px 20px;
  }
}

/* Responsive styles for small mobile screens */
@media screen and (max-width: 480px) {
  .login-button,
  .logout-button {
    width: 100%; /* Full width for buttons on small screens */
    text-align: center;
    margin: 5px 0;
  }

  .nav-item {
    text-align: center; /* Center-align items */
    padding: 12px 0;
  }
}


//-------------------------navbar.jsx------------------------------
import React, { useEffect, useState } from 'react';
import './Navbar.css';
import { useLocation, useNavigate } from 'react-router-dom';

const Navbar = () => {
  const [isLogin, setLogin] = useState(false);
  const [isMenuOpen, setMenuOpen] = useState(false); // State to manage the toggle menu
  const navigate = useNavigate();
  const location = useLocation();

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (token) {
      setLogin(true);
    }
  }, []);

  const handleLogOut = () => {
    localStorage.removeItem('token');
    setLogin(false);
  };

  const onClicklogin = () => {
    navigate('/login');
  };

  const onClickCreatePage = () => {
    navigate('/create');
  };

  const onCLickReadPage = () => {
    navigate('/read');
  };

  const onclickHomePage = () => {
    navigate('/');
  };

  const toggleMenu = () => {
    setMenuOpen(!isMenuOpen);
  };

  return (
    <nav className="navbar">
      <div className="navbar-left">
        <span className="company-name">Crud Mern</span>
        <div className={`menu-toggle ${isMenuOpen ? 'open' : ''}`} onClick={toggleMenu}>
          â˜° {/* Hamburger icon */}
        </div>
        <div className={`nav-items ${isMenuOpen ? 'open' : ''}`}>
          <span className={`nav-item ${location.pathname === '/' ? 'active' : ''}`} onClick={onclickHomePage}>Home</span>
          <span className={`nav-item ${location.pathname === '/create' ? 'active' : ''}`} onClick={onClickCreatePage}>Create</span>
          <span className={`nav-item ${location.pathname === '/read' ? 'active' : ''}`} onClick={onCLickReadPage}>UserList</span>
        </div>
      </div>
      <div className="navbar-right">
        {isLogin ? (
          <button className="logout-button" onClick={handleLogOut}>LogOut</button>
        ) : (
          <button className="login-button" onClick={onClicklogin}>Login</button>
        )}
      </div>
    </nav>
  );
};

export default Navbar;
